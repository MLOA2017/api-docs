#################################################################################                                                                           ####                                 ORDER API                                 ####                                                                           ####                     (c) Airbus Defence and Space Geo                      ####                                                                           ####                                                                           ####                    Contact: frederic.bages@airbus.com                     ####                                                                           ################################################################################## TODO: check URLsinfo:  title: Airbus Defence and Space Geo - Order API  description: |    This document describes Airbus Defence and Space Geo Order API. The Order API can be used to order products.        __IMPORTANT -__ You should follow the [Geo APIs recommendations](/api-docs/recommendations.html) when implementing clients.        You can consult the [version log](/api-docs/order/CHANGELOG.html) for information about modification history.        __STANDARD RULES -__ The following rules apply to attributes format when specifyed.        Intervals for numerical values and dates are specified using the standard straights brackets.    * [n1,n2] equal to n1 <= field <= n2    * [n1,n2[ equals to n1 <= field < n2    * ]n1,n2[ equals to n1 < field < n2    * ]n1,n2] equal to n1 < field <= n2    * [n1 equals to n1<= field    * ]n1 equals to n1 < field    * n1] equals to field <= n1    * n1[ equals to field < n1        All requests must contain the following header fields    * Field name = Authorization (value = token)    * Field name =  X-ADS-Username      version: '1.0'
#################################################################################                                                                           ####                           GENERAL CONFIGURATION                           ####                                                                           #################################################################################swagger: "2.0"#info:#  description: "REST services for Order API. TODO: Check authorization"
consumes:  - application/jsonproduces:  - application/json  host: localhost:9000basePath: "/api/v1"schemes:  - "https"
securityDefinitions:  api_key:    description: A recognised anthentication API key for a named system user.    in: header    name: Authorization    type: apiKey
#################################################################################                                                                           ####                           OBJECTS DOCUMENTATION                           ####                                                                           #################################################################################definitions:  AoiGeometry:    type: object    format: GeoJSON    description: Area Of Interest defined by coordinates in GeoJSON format  ProgTypeName:    type: string    description: refer to one-tasking online documentation at http://www.intelligence-airbusds.com/ for more information    enum:       - ONEPLAN      - ONEDAY      - ONENOW  IsoDate:    type: string    format: ISO-8601    description: date string in ISO-8601 format 'YYYY-MM-DDTHH:mm:ssZ'  DateRange:    type: object    properties:      startDate:        $ref: '#/definitions/IsoDate'      endDate:        $ref: '#/definitions/IsoDate'  Currency:    type: string    format:  ISO 4217    enum:      - EUR      - USD  MissionName:    type: string    description: mission name (PLEIADES, SPOT, etc.)    enum:     - SPOT     - PLEIADES  ProgCapacityResponseGeoconnector:    type: object    properties:      progCapacity:        type: array        items:          $ref: '#/definitions/ProgCapacity'    description: response from the ProgServer to the request of programming capacity.  OptionsRequest:    type: object    properties:      aoi:        type: array        items:          $ref: '#/definitions/OptionsAoi'      categoryFilter:        type: string        enum:          - CATEGORY_TECHNICAL_PRODUCT          - CATEGORY_PROPERTIES          - NO_CATEGORY    description: input of the Get Options request. Contains a list of areas of interest with their ID (mandatory to return the projection option) and a filter to get the expected productType options (CATEGORY_TECHNICAL_PRODUCT), the expected item properties (CATEGORY_PROPERTIES) or all options/properties (NO_CATEGORY). By default the category filter is set to CATEGORY_TECHNICAL_PRODUCT.    example: {      aoi: [ {          polygonId: 1,          geometry: {              type: "Polygon",              coordinates: [[8.492431640625004, 43.04480541304369],[9.591064453125002, 43.04480541304369],                [9.591064453125002, 41.10419094457646], [8.492431640625004, 41.10419094457646],[8.492431640625004, 43.04480541304369]]            }        }      ]    }  OptionsPerProductType:    type: object    properties:      productType:        $ref: '#/definitions/ProductType'      licence:        type: string      options:        type: array        items:          $ref: '#/definitions/Property'    description: defines the production options and licence for a productType. Contains the productType identifier, the licence identifier, and a list of the selected production options (key/value for each option corresponding to Option.name/OptionListItem.id or Option.name/value of expected option).    example: {      productType: "PleiadesArchiveMono",      licence: "eula_5",      options: [        {          key: "processing_level",          value: "primary"        }      ]    }  # GeometryPrice:  #   type: object  #   properties:  #     geometryId:  #       type: integer  #       format: int64  #       description: geometry identifier.  #     name:  #       type: string  #       description: geometry name.  #     areaKm2:  #       type: number  #       format: double  #       description: area surface of this geometry.  #   description: Define geometries informations returned in GetPrice.  PriceResponse:    type: object    properties:      # calculation:      #   type: string      #   description: Calculation description at total level.      contractId:        type: string        description: identifier of your contract (contact our support to get this identifier)      currency:        $ref: '#/definitions/Currency'      # customerId:      #   type: string      #   description: Customer identifier.      discountPercentage:        type: number        format: double        description: discount percent at total level      discountValue:        type: number        format: double        description: discount value at total level      productTypes:        type: array        items:          $ref: '#/definitions/PriceItem'      # processDateTime:      #   $ref: '#/definitions/IsoDate'      # totalAmount:      #   type: number      #   format: double      #   description: Work order total amount (valued  in reference currency).      totalAmount:        type: number        format: double        description: work order total amount (valued  in contract currency)      # totalAmountCurBeforeDiscount:      #   type: number      #   format: double      #   description: Work order total amount before discount (valued  in contract currency).      # geometries:      #   type: array      #   items:      #     $ref: '#/definitions/GeometryPrice'    description: estimated price of the work order  Property:    type: object    properties:      key:        type: string      value:        type: string  Contracts:    type: object    properties:      contracts:        type: array        items:          $ref: '#/definitions/Contract'    description: list of all the contracts linked to the user.  Aoi:    type: object    description: Area Of Interest. Contains the ID of the AOI, the GeoJSON coordinates and the name to use in invoice.    properties:      id:        type: integer        format: int32      geometry:        $ref: '#/definitions/AoiGeometry'      name:        type: string  ProgCapacity:    type: object    properties:      mission:        description: mission name (PLEIADES, SPOT, etc.)        $ref: '#/definitions/MissionName'      progTypes:        type: array        items:          $ref: '#/definitions/ProgType'    description: item of the response from the ProgServer to the request of programming capacity.  OptionsAoi:    type: object    properties:      polygonId: # todo : remplacer par aoiId        type: string      geometry:        $ref: '#/definitions/AoiGeometry'    description: the Area Of Interest definition to give in Get Options request. Contains the GeoJSON coordinates and the ID of the AOI (Get Options returns for each AOI an option with the name projection_[aoiId] with a specific list of available projection codes).  DateValueOption:    type: object    properties:      allowedValue:        type: array        items:          type: string      defaultValue:        type: string    #  minDate:    #    $ref: '#/definitions/SimpleValueOption'    #  minDuration:    #    type: string    #  defaultDuration:    #    type: string  PriceItem:    type: object    properties:      amount:        type: number        format: double        description: Amount (valued  in contract currency) after discount.      # amountCurrency:      #   type: number      #   format: double      #   description: Amount (valued  in contract currency) after discount.      areaKm2:        type: number        format: double        description: Total area surface relevant for the product offer.      # description:      #   type: string      #   description: Product description.      discountPercentage:        type: number        format: double        description: Discount percent applied on price.      discountValue:        type: number        format: double        description: Discount value applied on price.      # minimumOrderApply:      #   type: boolean      #   default: false      #   description: Does minimum surface value has been applied.      price:        type: number        format: double        description: price (valued  in contract currency)      # priceCurrency:      #   type: number      #   format: double      #   description: Price (valued  in contract currency).      productTypeId:        type: string        description: total amount in defined currency and with discount.      items:        type: array        items:          $ref: '#/definitions/WorkOrderItemPriceRef'      # manualFeasibilityStudy:      #   type: boolean      #   default: false      #   description: Value "Yes" if the customer's tasking request requires a feasibility study (for OnePlan and OneSeries only). Value "No" if the tasking can be activated automatically.      # transId:      #   type: integer      #   format: int64      #   description: transaction identifier.      # temporalSerie:      #   type: boolean      #   default: false      #   description: Value "Yes" if the customer orders at least 2 archives on the same AOI and reports that these archives are ordered as temporal series      # geometries:      #   type: array      #   items:      #     $ref: '#/definitions/GeometryPrice'      # oneSeriesType:      #   type: string      #   description: Accepted values are "Critical" or "Routine" according to the result of the feasibility study.      # oneSeriesRoutineCategory:      #   type: string      #   description: the feasibility information for tasking capacity. Classification possible values are EASY and CHALLENGING.      # commitment:      #   type: boolean      #   default: false      #   description: Value "Yes" if GEO is committed according to the OneTasking Offer (by default). Value "No" if GEO is not committed according to the result of the feasibility study.      voucherCode:        type: string        description: Voucher code.    description: Define price informations for work order item of priceResponse.
  OrderRequest:    type: object    properties:      aoi:        type: array        items:          $ref: '#/definitions/Aoi'      contractId:        type: string      items:        type: array        items:          $ref: '#/definitions/WorkOrderItem'      primaryMarket:        type: string        enum:          - AGRI          - ASSUR          - AUTRE          - CARTO          - DEFSEC          - DISTRI          - ENERGIE          - ENV          - FORET          - GDPUBLIC          - GENIE          - MARITIME          - MOBIL          - NQUAL          - PRESSE          - RISQUE          - SANTE          - TELECOM          - TOURISME          - TRANSPORT      secondaryMarket:        type: string        description: prefix of secondary market must be the primary market (for example, primary market = AGRI, secondary market = AGRI_ENV)        enum:          - AGRI_AUTRE          - AGRI_CTRL          - AGRI_ENV          - AGRI_INT          - AGRI_NQ          - AGRI_PREC          - AGRI_PROD          - AGRI_SI          - ASSUR          - AUTRE          - CARTO_AUTRE          - CARTO_CAD          - CARTO_NQ          - CARTO_RSMT          - CARTO_THEM          - CARTO_TOPO          - DEFSEC_AUTRE          - DEFSEC_CARTO          - DEFSEC_GEO          - DEFSEC_INT          - DEFSEC_NQ          - DEFSEC_RSGNT          - DISTRI          - ENERGIE_AUTRE          - ENERGIE_ECO          - ENERGIE_ENV          - ENERGIE_EXPLOIT          - ENERGIE_INFRA          - ENERGIE_NQ          - ENERGIE_PROD          - ENV_AUTRE          - ENV_EAU          - ENV_NQ          - ENV_SURV          - FORET_AUTRE          - FORET_CARB          - FORET_DEFOR          - FORET_ECO          - FORET_EXPLOIT          - FORET_INV          - FORET_NQ          - GDPUBLIC          - GENIE          - MARITIME_AUTRE          - MARITIME_CTRL          - MARITIME_ENV          - MARITIME_NQ          - MARITIME_ROUT          - MARITIME_RSGNT          - MOBIL_AUTRE          - MOBIL_COMM          - MOBIL_GDPUB          - MOBIL_INSTIT          - MOBIL_NQ          - NQUAL          - PRESSE          - RISQUE_ANTICIP          - RISQUE_AUTRE          - RISQUE_CRISE          - RISQUE_NQ          - RISQUE_POST          - RISQUE_PREV          - SANTE          - TELECOM          - TELECOM_AUTRE          - TELECOM_NQ          - TOURISME          - TOURISME_AUTRE          - TOURISME_NQ          - TRANSPORT      customerReference:        type: string        description: any reference of your choice      options:        type: array        items:          $ref: '#/definitions/Property'      optionsPerProductType:        type: array        items:          $ref: '#/definitions/OptionsPerProductType'      voucherCodes:        type: array        uniqueItems: true        items:          type: string    description: the WorkOrder to compute for price calculation or ordering. Contains a list of AOI, a list of WorkOrderItems, commercial data, a list of global options (key/value, with the mandatory deliveryType/network pair), the list of production options for each productType and a list of voucher codes.    example: {        aoi: [          {            id: 1,            geometry: {              type: "Polygon",              coordinates: [[8.492431640625004, 43.04480541304369],[9.591064453125002, 43.04480541304369],                [9.591064453125002, 41.10419094457646], [8.492431640625004, 41.10419094457646],[8.492431640625004, 43.04480541304369]]            },            name: "test_for_partners"          }        ],        contractId:  "toBeDefined",        items: [          {            datastripIds: [              "40582651209160926432R5"            ],            aoiId: 1,            productTypeId: "SPOTArchive10Color",            properties: [              {                key: "http://adm.i3.com/ont/scene#shift",                value: "5"              },              {                key: "date",                value: "2012-09-16T09:26:43Z"              },              {                key: "geometryMaxX",                value: "9.07687956225646"              },              {                key: "geometryMaxY",                value: "42.27393795330642"              },              {                key: "geometryMinX",                value: "8.189353632881046"              },              {                key: "geometryMinY",                value: "41.645365338986835"              },              {                key: "indexDate",                value: "2016-08-23T12:40:03.077254Z"              },              {                key: "uid",                value: "a4550d93280b4afc70e3949ffec78df1"              },              {                key: "browseLarge",                value: "http://api.astrium-geo.com/catalog/img/getfeatureimage.aspx?id=40582651209160926432R&IT=QL&shift=5"              },              {                key: "browseMedium",                value: "http://api.astrium-geo.com/catalog/img/getfeatureimage.aspx?id=40582651209160926432R&IT=QL&shift=5"              },              {                key: "browseSmall",                value: "http://api.astrium-geo.com/catalog/img/getfeatureimage.aspx?id=40582651209160926432R&IT=QK&shift=5"              },              {                key: "overlayGeographic",                value: "http://api.astrium-geo.com/catalog/img/getfeatureimage.aspx?id=40582651209160926432R&PR=32662&shift=5"              },              {                key: "overlayMercator",                value: "http://api.astrium-geo.com/catalog/img/getfeatureimage.aspx?id=40582651209160926432R&PR=3857&shift=5"              },              {                key: "resolutionMeters",                value: "10"              },              {                key: "id",                value: "40582651209160926432R5"              },              {                key: "spectralGrouping",                value: "grnm"              },              {                key: "vehicle",                value: "SPOT4"              },              {                key: "archivingStation",                value: "TT"              },              {                key: "cloudCover",                value: "0"              },              {                key: "groundStation",                value: "TT"              },              {                key: "incidenceAngle",                value: "3.88784"              },              {                key: "lookDirection",                value: "right"              },              {                key: "name",                value: "40582651209160926432R5"              },              {                key: "snowCover",                value: "0"              },              {                key: "remoteRaster",                value: "remoteRaster"              },              {                key: "archiveName",                value: "SPOT archive"              },              {                key: "archiveUid",                value: "982d0cd3-2e65-4f5f-a828-5a2690b95a07"              },              {                key: "category",                value: "scene"              },              {                key: "productName",                value: "SPOT 10-m Colour"              },              {                key: "productUid",                value: "b72c1de2-4ce9-4812-a96a-24fdd8ac39bd"              },              {                key: "pin",                value: "true"              },              {                key: "browse",                value: "true"              },              {                key: "polygonIndex",                value: "aoi_polygon_1"              },              {                key: "polygonLabel",                value: "Polygon 1"              }            ]          }        ],        primaryMarket: "AGRI",        secondaryMarket: "AGRI_ENV",          customerReference: "The order reference that will appear in invoicing",        options: [          {            key: "deliveryType",            value: "network"          }       ],        optionsPerProductType: [          {            productTypeId: "SPOTArchive10Color",            licence: "eula_5",            options: [                {                  key: "image_format",                  value: "dimap_geotiff"                },                {                  key: "Account",                  value: "DDPORTAL"                },                {                  key: "projection_1",                  value: "32632"                },                {                  key: "processing_level",                  value: "level_3"                }            ]          }        ],        voucherCodes:  [
        ]      }  Voucher:    type: object    properties:      code:        type: string      period:        description: date until the voucher remains valid         $ref: '#/definitions/DateRange'      amount:        type: number        format: double      currency:        $ref: '#/definitions/Currency'      consumed:        description: indicates if the voucher can still be used (consumed=false) or if it has been already used (consumed=true)        type: boolean        default: false    description: a payment method. Contains the code identifying this voucher, its period of validity, amount and currency, and if it is already consumed.  OrderResponse:    type: object    properties:      salesOrderId:        type: string    description: response to the order service. Contains the identifier for order follow-up.  AvailableOptions:    type: object    properties:      availableOptions:        type: array        items:          $ref: '#/definitions/Option'    description: the response to the Get Options service. Returns a list of expected options of production and/or item properties  WorkOrderItemPriceRef:    type: object    properties:      # workOrderItemId:        #   type: string      #   description: Work order item unique identifier (managed by WOIS).      datastripIds:        type: array        items:          type: string          description: Datastrip identifier.      # geometryId:      #   type: integer      #   format: int64      #   description: Work order item unique identifier (managed by WOIS).      # taskingId:      #   type: string      #   description: Tasking id for the work order item (optional as it applies only to a tasking product).      # quotationExternalId:      #   type: string      #   description: Work order item unique identifier (managed by WOIS).    description: Work order informations returned for getPrice.  OnePlanStandardOptions:    type: object    properties:      acquisitionPeriod:        $ref: '#/definitions/DateRange'      maxCloudCover:        $ref: '#/definitions/ValueOption'      maxIncidenceAngle:        $ref: '#/definitions/ValueOption'      comment:        $ref: '#/definitions/ValueOption'    description: options for Automatic OnePlan tasking capacity.  ProgOptions:    type: object    properties:      maxIncidenceAngleExtended:        type: number        format: double      maxIncidenceAngleNotExtended:        type: number        format: double      extendedAngle:        $ref: '#/definitions/ValueOption'      acquisitionPeriod:        $ref: '#/definitions/DateValueOption'      maxCloudCover:        $ref: '#/definitions/ValueOption'      maxIncidenceAngle:        $ref: '#/definitions/ValueOption'      priority:        $ref: '#/definitions/ValueOption'      stereoMode:        $ref: '#/definitions/ValueOption'      tristereoMode:        $ref: '#/definitions/ValueOption'      #acquisitionMinDate:      #  $ref: '#/definitions/SimpleValueOption'      acquisitionDuration:        $ref: '#/definitions/ValueOption'      temporalMode:        description: MULTIPERIOD or REGULAR        $ref: '#/definitions/ValueOption'      minBH:        description: minimal value for the BHRange (stere/tri-stereo modes)        $ref: '#/definitions/ValueOption'      maxBH:        description: maximal value for the BHRange (stere/tri-stereo modes)        $ref: '#/definitions/ValueOption'      acquisitionMode:        description: MONO, STEREO or TRISTEREO        $ref: '#/definitions/ValueOption'      nbacquisitionRegularacquisition:        $ref: '#/definitions/ValueOption'      minIntervalRegularacquisition:        $ref: '#/definitions/ValueOption'      advancedOptions:        $ref: '#/definitions/OnePlanAdvancedOptions'      standardOptions:        $ref: '#/definitions/OnePlanStandardOptions'    description: options returned by the ProgServer for tasking capacity.  ProgType:    type: object    properties:      name:        $ref: '#/definitions/ProgTypeName'      mission:        description: mission name (PLEIADES, SPOT, etc.)        $ref: '#/definitions/MissionName'      expirationDate:        description: limit date until you can order the new acquisition        $ref: '#/definitions/IsoDate'      successRate:        description: percentage of success rate        type: number        format: float      progOptions:        $ref: '#/definitions/ProgOptions'      # segments:      #   type: array      #   items:      #     $ref: '#/definitions/Segment'      extendedAngleNotAllowed0020:        type: array        items:          $ref: '#/definitions/Segment'      extendedAngleAllowed:        type: array        items:          $ref: '#/definitions/Segment'      feasibility:        $ref: '#/definitions/Feasibility'    description: TODO voir progserver doc  Segment:    type: object    properties:      extendedAngle:        type: boolean        default: false    description: TODO voir progserver doc  ProductType:    type: object    properties:      productTypeId:        type: string      minimumAreaOrderApplied:        type: number        format: double      descriptionUrl:        type: string    description: the commercial product offer. Contains the minimum are to order a product of this type and an URL displaying the description of this product.  ProductTypes:    type: object    properties:      productTypes:        type: array        items:          $ref: '#/definitions/ProductType'    description: the list of available products for a user/contract.#  ProgCapacityError:#    type: object#    properties:#      code:#        type: string#      locator:#        type: string#      message:#        type: string  ValueOption:    type: object    properties:      allowedValue:        type: array        items:          type: string      alertThreshold:        type: string      proposalThreshold:        type: string      defaultValue:        type: string      minValue:        type: string      maxValue:        type: string    description: TODO voir doc progserver  OnePlanAdvancedOptions:    type: object    properties:      acquisitionPeriod:        description: start date - end date of image acquisition        $ref: '#/definitions/DateRange'      maxCloudCover:        description: maximum cloud cover percentage you accept on image(s)        $ref: '#/definitions/ValueOption'      maxIncidenceAngle:        description: maximum incidence angle you accept (high angle value is not recommended for orthorecetified images)        $ref: '#/definitions/ValueOption'      acquisitionMode:        description: MONO, STEREO or TRISTEREO        $ref: '#/definitions/ValueOption'      minBH:        description: minimal value for the BHRange (stere/tri-stereo modes)        $ref: '#/definitions/ValueOption'      maxBH:        description: maximal value for the BHRange (stere/tri-stereo modes)        $ref: '#/definitions/ValueOption'      comment:        $ref: '#/definitions/ValueOption'    description: options for Manual OnePlan tasking capacity.  Option:    type: object    properties:      category:        type: string      constraint:        $ref: '#/definitions/Constraint'      label:        type: string      name:        type: string      type:        type: string      values:        type: array        items:          $ref: '#/definitions/OptionListItem'      defaultValue:        type: string      range:        type: array        items:          type: number          format: double      format:        type: string      mandatory:        type: string    description: definition of an expected option. Contains a category defining its location (category=technical_product ->  optionsPerProductType, category=item_properties -> properties of WorkOrderItem), a constraint defining its validity, a name  that can be used in another option's constraint, a type (double, list, periods or string), the expected values it type=list, the range if type=double, the expected format of the string/periods and if the option is mandatory.     example: {      category: "technical_product",      defaultValue: "ortho",      label: "PROCESSING_LEVEL",      mandatory: "true",      name: "processing_level",      type: "list",      values:       [        {          id: "ortho",          label: "Ortho"        },        {          id: "projected",          label: "Projected"        },        {          id: "primary",          label: "Primary"        }      ]    }  OptionListItem:    type: object    properties:      id:        type: string      label:        type: string    description: the definition of a possible value for an option. Only the id must be used in constraints (see Constraint) or options selection (see OptionsPerProductType).    example: {      id: "primary",      label: "Processing Level PRIMARY"    }  Constraint:    type: object    properties:      reject:        type: boolean        default: false      filter:        type: string        description: a query filter to be applied on the resulting option domain object    description: the constraint to be applied on the option. Contains two fields, reject (boolean) and filter (string) a query filter to be applied on the resulting option domain object)      example: {      reject: true,      filter: "processing_level:primary"    }  Feasibility:    type: object    properties:      classification:        type: string        description: the feasibility information for tasking capacity. Classification possible values are EASY and CHALLENGING.  Contract:    type: object    properties:      contractId:        type: string        description: identifier of your contract (contact our support to get your contract identifier)      name:        type: string        description: contract name      tradeAgreementUrl:        type: string      creditRemaining:        type: string        description: amount of money you have on your contract (total price of your order must not exceed your credit remaining)      currency:        $ref: '#/definitions/Currency'      language:        type: string        format: ISO 639-1        description: defines a contract for a user. Contains an URL displaying the trade agreement, the remaining credit on this contract, and commercial data.  WorkOrderItem:    type: object    properties:      comments:        type: string      datastripIds:        type: array        description: identifier(s) of segment(s) you are purchasing        items:          type: string      aoiId:        type: integer        format: int32        description: identifier of area Of Interest      productTypeId:        type: string      properties:        type: array        items:          $ref: '#/definitions/Property'    description: defines an item in a WorkOrder. Contains the datastrips ID for an archive item, the AOI identifier for which the item has been selected, the product type of the item and the item properties. Expected properties can be retrieved from the Get Options service.  TaskingCapacityRequest:    type: object    properties:      contractId:        type: string      progTypeName:        type: array        items:          $ref: '#/definitions/ProgTypeName'      mission:        description: mission name (PLEIADES, SPOT, etc.)        $ref: '#/definitions/MissionName'      aoi:        $ref: '#/definitions/AoiGeometry'      acquisitiontDate:        $ref: '#/definitions/DateRange'#      acquisitionEndDate:#        type: string      acquisitionMode:        type: string        enum:          - MONO          - STEREO          - TRISTEREO      maxCloudCover:        description: maximum cloud coverage percentage        type: number        format: float      maxIncidenceAngle:        type: number        format: float    description: request to get the capacities of the ProgServer for potential tasking.    example: {        contractId: "toBeDefined",        progTypeName: "ONEPLAN",        mission: "PLEIADES",        aoi: {            geometry: {              type: "Polygon",              coordinates: [[8.492431640625004, 43.04480541304369],[9.591064453125002, 43.04480541304369],                [9.591064453125002, 41.10419094457646], [8.492431640625004, 41.10419094457646],[8.492431640625004, 43.04480541304369]]            }          },        acquisitionDate: {          startDate : "2018-01-01T01:00:00Z",          endDate: "2018-01-05T01:00:00Z"        },        acquisitionMode: "STEREO",        maxCloudCover: 20.0,        maxIncidenceAngle: 50.0      }
#################################################################################                                                                           ####                                  PATHS                                    ####                                                                           #################################################################################
paths:  /me/contracts:    get:      summary: >-        Get information about your contract(s).       security:        - api_key: []      responses:        '200':          description: Output type          schema:            $ref: '#/definitions/Contracts'      tags:        - Contract        # /contracts/{contractId}:  #   get:  #     summary: Get information about a specific contract  #     parameters:  #       - name: contractId  #         in: path  #         description: ''  #         required: true  #         type: string  #     responses:  #       '200':  #         description: Output type  #         schema:  #           $ref: '#/definitions/Contract'  #     tags:  #       - Contract  # /contracts/{contractId}/productTypes:  #   get:  #     summary: Get product types allowed to be ordered on a specific contract  #     parameters:  #       - name: contractId  #         in: path  #         description: ''  #         required: true  #         type: string  #     responses:  #       '200':  #         description: Output type  #         schema:  #           $ref: '#/definitions/ProductTypes'  #     tags:  #       - productType  # /contracts/{contractId}/vouchers/{voucherCode}:  #   get:  #     summary: Get contract's voucher  #     parameters:  #       - name: contractId  #         in: path  #         description: ''  #         required: true  #         type: string  #       - name: voucherCode  #         in: path  #         description: ''  #         required: true  #         type: string  #     responses:  #       '200':  #         description: Output type  #         schema:  #           $ref: '#/definitions/Voucher'  #     tags:  #       - order  /licences/{licenceName}:    get:      summary: Get licence      produces:        - text/plain      parameters:        - name: licenceName          in: path          description: 'example: "eula_5"'          required: true          type: string      security:        - api_key: []      responses:        '200':          description: Output type          schema:            type: string      tags:        - order        /orders:    post:      summary: Order      parameters:        - in: body          name: body          description: ''          required: true          schema:            $ref: '#/definitions/OrderRequest'      security:        - api_key: []      responses:        '200':          description: Output type          schema:            $ref: '#/definitions/OrderResponse'      tags:        - order  /prices:    post:      summary: Calculate price      parameters:        - in: body          name: body          description: ''          required: true          schema:            $ref: '#/definitions/OrderRequest'      security:        - api_key: []      responses:        '200':          description: Output type          schema:            $ref: '#/definitions/PriceResponse'      tags:        - order  /productTypes:    get:      summary: Get product types when user has only one contract      security:        - api_key: []      responses:        '200':          description: Output type          schema:            $ref: '#/definitions/ProductTypes'      tags:        - productType  /productTypes/{productTypeId}/options:    post:      summary: Get options for a product type      security:        - api_key: []      parameters:        - name: productTypeId          in: path          description: ''          required: true          type: string        - in: body          name: body          description: ''          required: true          schema:            $ref: '#/definitions/OptionsRequest'      responses:        '200':          description: Output type          schema:            $ref: '#/definitions/AvailableOptions'      tags:        - productType        - order  /vouchers/{voucherCode}:    get:      summary: Get voucher      parameters:        - name: voucherCode          in: path          description: 'Optional voucher identifier'          required: true          type: string      security:        - api_key: []      responses:        '200':          description: Output type          schema:            $ref: '#/definitions/Voucher'      tags:        - order  /tasking/capacity:    post:      summary: 'Tasking : programmation capacity and feasibility'      parameters:        - in: body          name: body          description: ''          required: true          schema:            $ref: '#/definitions/TaskingCapacityRequest'      security:        - api_key: []      responses:        '200':          description: Output type          schema:            $ref: '#/definitions/ProgCapacityResponseGeoconnector'      tags:        - tasking
