###############################################################################
##                                                                           ##
##                                 SEARCH API                                ##
##                                                                           ##
##                     (c) Airbus Defense and Space Geo                      ##
##                                                                           ##
##                                                                           ##
##                    Contact: frederic.bages@airbus.com                     ##
##                                                                           ##
###############################################################################

info:
  title: Airbus Defense and Space Geo - Search API
  description: |
    This document describes Airbus Defense and Space Geo Search API. The Search API can be used to query the products available for ordering through the [Order API](https://airbusgeo.github.io/geoapi-viewer/?url=https://airbusgeo.github.io/api-docs/order.yaml). 
    
    __ALPHA version subject to change__
    
    __IMPORTANT -__ best practices when implementing clients:
    * Your clients should not rely on properties that are not documented in this specification as such properties could be changed or removed without notice.
    * Your clients should not assume that the properties described in this specifications are the only ones that will be returned by the API. Not documented or additional properties will be returned in future version of this API without notification. 
    * Your clients should not rely on or map properties that are not usefull to them. Doing so will ensure that your clients are not impacted by API changes on properties that are not usefull to them.
    
    __DEPRECATION -__ The following changes will be included in final 1.0 specification:

    __VERSION LOG -__ 
    
    1.0-alpha1
    
    * Initial version
    
    __STANDARD RULES -__ The following rules apply to attributes format when specifyed.
    
    Intervals for numerical values and dates are specified using the standard straights brackets.
    * [n1,n2] equal to n1 <= field <= n2
    * [n1,n2[ equals to n1 <= field < n2
    * ]n1,n2[ equals to n1 < field < n2
    * ]n1,n2] equal to n1 < field <= n2
    * [n1 equals to n1<= field
    * ]n1 equals to n1 < field
    * n1] equals to field <= n1
    * n1[ equals to field < n1
    
  version: '1.0-alpha1'

###############################################################################
##                                                                           ##
##                           GENERAL CONFIGuRATION                           ##
##                                                                           ##
###############################################################################

consumes:
  - application/json

produces:
  - application/json

schemes:
  - https
  - http

host: search-qual.geoapi-airbusds.com

securityDefinitions:
  api_key:
    description: A recognised anthentication API key for a named system user.
    in: header
    name: Authorization
    type: apiKey
  param_key:
    description: A recognised anthentication bearer token for a named system user.
    in: query
    name: apiKey
    type: apiKey
swagger: '2.0'

###############################################################################
##                                                                           ##
##                           OBJECTS DOCUMENTATION                           ##
##                                                                           ##
###############################################################################

definitions:

  # START ------------------ Airbus DS Geo dictionary ------------------- START
  
  acquisitionDate:
    description: Acquisition date of the image in ISO 8601 format
    type: string
    format: ISO 8601

  cloudCover:
    description: Percentage of the image covered by cloud (0 - 100).
    type: integer
    
  constellation:
    description: The type of satellite used to acquire the image (Pleiades or SPOT).
    type: string
    enum: [ "Pleiades", "SPOT" ]

  incidenceAngle:
    description: The incidence angle is the angle from the target point of view. It represents the angle between the ground normal and look direction from the satellite, combining the pitch and roll angles.
    type: number
    format: float

  snowCover: 
    description: Percentage of the image covered by snow (0 - 100).
    type: integer

  # END   ------------------ Airbus DS Geo dictionary -------------------   END

  Id:
    description: An internal identifier.
    type: string
    
  userRole:
    description: The user role in the system.
    type: string
    
  userPreference:
    description: | 
     Client defined properties of user preferences. This object must always be retrieved from the API before updating it as it is shared among all client implementations. Each client must add their specific properties in a sub-object.
     <br/><br/>
    example: |
        {
          "com.intelligence-airbusds.oneatlas": {
            "lang": "fr",
            "lastPosition": [ 0 , 0 ]
          }
        }
    type: object
    
    
  Me:
    description: Describes a user and its properties.
    type: object
    properties:
      canCompose:
        description: Indicates if the user is allowed to create its own composition of images.
        type: boolean
      email: 
        description: The user registered email address in Airbus Identity Management system (currently UCA).
        type: string
      externalId: 
        description: The user identifier in Airbus Identity Management system (currently UCA).
        type: integer
      firstname: 
        description: The user firstname
        type: string
      lastname:
        description: The user lastname
        type: string
      id:
        description: The user OneAtlas internal identifier
        type: string
      subscriptionAdministrator:
        description: The list of subscription identifiers that the user is an administrator.
        type: array
        items: 
          $ref: '#/definitions/Id'
      subscriptions: 
        description: The list of subscription the user belongs to.
        type: array
        items: 
          $ref: '#/definitions/Id'
      systemRoles:
        description: The list of the user roles in OneAtlas system.
        type: array
        items: 
          $ref: '#/definitions/userRole'
      userPreference:         
          $ref: '#/definitions/userPreference'
    required:
      - canCompose
      - email
      - externalId
      - firstname
      - lastname
      - id
      
  SearchResult: # NOTE: This is an OpenSearch and FeatureCollection compliant object.
    description: 'OpenSearch response object in JSon format. it is also a GeoJSON FeatureCollection object.'
    type: object
    properties:
      totalResults: 
        description: The number of search results available for the current search.
        type: integer
      startIndex: 
        description: The index of the first search result in the current set of search results.
        type: integer
      itemsPerPage: 
        description: The number of search results returned per page.
        type: integer
      query:
        $ref: '#/definitions/OpenSearch Query'
      type:
        description: the result item type (always equals to "FeatureCollection")
        type: string
        enum: [ "FeatureCollection" ]
      features:
        description: the array of matching images as GeoJSON feature objects.
        type: array
        items:
          $ref: '#/definitions/GeoJSON Feature'
      
  OpenSearch Query:
      description: 'Query that can be used to recreate the search request that generated the current search response. <b>WARNING:</b> This object will be changed in final version.'
      type: object
      properties:
        constellation: #TODO change type ?
          description: 'The satellite filter used ex: { Pleiades, SPOT 6/7 }.'
          type: string 
        sortKeys: #TODO change type ?
          description: 'The sort order used for the response ex: constellation,1 acquisitionDate,0'
          type: string
        count: #TODO change name and type ?
          description: The number of search results returned per page.
          type: string
        geometry: #TODO change name and type ?
          description: the bounding box used for filtering images as a GeoJSON polygon.
          type: string
        # xuid: # What is this properties used for ?
        pw: #TODO change name and type ?
          description: The page number
          type: string
      
  GeoJSON Feature:
    description: GeoJSON feature object.
    externalDocs: 
      description: GeoJSON feature object specification.
      url: 'http://geojson.org/geojson-spec.html#feature-objects'
    type: object
    properties:
      id:
        description: The image OneAtlas internal identifier.
        type: string
      properties: 
         $ref: '#/definitions/GeoJSON Feature Properties'
      geometry:
         $ref: '#/definitions/GeoJSON Geometry'
      type:
        description: The feature type (always equals to "Feature")
        type: string
        enum: [ "Feature" ]
    
  GeoJSON Feature Properties:
    description: GeoJSON feature properties object
    type: object
    properties: # TODO: Described for image search. Ensure that it is always the same or change the YAML name.
      constellation:
        $ref: '#/definitions/constellation'
      wmtsUrl: 
        description: Image url link with place holders for the zoom level {z}, the tile x {x} and y {y} coordinates.
        type: string
        format: url
      satellite:
        description: 'The satellite used to acquire the image.'
        type: string
      acquisitionDate:
        $ref: '#/definitions/acquisitionDate'
      
    
  GeoJSON Geometry:
    description: A geometry describing the feature (point, polygon, multi-polygon, ...)
    externalDocs:
      description: GeoJSON Geometry object specification
      url: 'http://geojson.org/geojson-spec.html#geometry-objects'
    type: object
    properties:
      type:
        description: The type of the geometry.
        type: string
        enum: ["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"]
      coordinates:
        description: the geometry coordinates; depends on the geometry type (see GeoJSON specification of Geometry objects).
        type: array
        items:
          $ref: '#/definitions/GeoJSON Point'
  
  GeoJSON Point:
    description: A point definition.
    type: array
    example: '[ 10, 10 ]'
    items:
      type: integer

  Image Metadata:
    description: A GeoJSON Feature describing the image, including its properties and geometry.
    type: object
    properties:
      id:
        description: The image identifier.
        type: string
      type:
        description: The GeoJSON type. Always equals to "Feature".
        type: string
        enum: [ "Feature" ]
      properties:
         $ref: '#/definitions/Image Metadata Properties'
      geometry:
         $ref: '#/definitions/GeoJSON Geometry'
      
  Image Metadata Properties:
    description: The image properties.
    type: object
    properties:
      acquisitionDate:
        $ref: '#/definitions/acquisitionDate'
      cloudCover:
        $ref: '#/definitions/cloudCover'
      constellation:
        $ref: '#/definitions/constellation'
      geometryMinX:
        description: The minimum X coordinate of the images in geographic coordiante reference system (WGS84).
        type: number
        format: float
      geometryMinY:
        description: The minimum Y coordinate of the images in geographic coordiante reference system (WGS84).
        type: number
        format: float      
      geometryMaxX:
        description: The maximum X coordinate of the images in geographic coordiante reference system (WGS84).
        type: number
        format: float
      geometryMaxY:
        description: The maximum Y coordinate of the images in geographic coordiante reference system (WGS84).
        type: number
        format: float
      incidenceAngle:
        $ref: '#/definitions/incidenceAngle'
      insertionDate: 
        description: Date at which the images was inserted in One Atlas catalog in ISO 8601 format
        type: string
        format: ISO 8601
      resolution: 
        description: 'The image resolution in meter (i.e. the pixel size).'
        type: number
        format: float
      snowCover: 
        $ref: '#/definitions/snowCover'
      illuminationElevationAngle: 
        description: 'WARNING: Will be renamed to illuminationElevationAngle'
        type: number
        format: float # TODO check float or double ?
      satellite: 
        description: 'The satellite used to acquire the image.'
        type: string
      wmtsUrl: # duplicate
        description: Image url link with place holders for the zoom level {z}, the tile x {x} and y {y} coordinates.
        type: string
        
        
        
###############################################################################
##                                                                           ##
##                         END POINTS DOCUMENTATION                          ##
##                                                                           ##
###############################################################################

paths:

  /api/v1/search:
    get:
      summary: Search for images.
      description: |
        Query the catalog for relevant products in a given
        aera of interest (AOI). The returned object is an OpenSearch and GeoJSON FeatureCollection 
        compliant object.
        
        The AOI can be sent using either the bbox parameter or the geometry parameter.
        
        __WARNING__: Due to technical limitations in web browsers, proxies and web servers the GET method may not work with complex AOI geometries. If you are unsure of the maximum number of vertices of the AOI polygon you may use, please prefer the POST method with a JSon body instead.
      security:
        - api_key: []
        - param_key: []
      parameters:
        - description: "A bounding box array string in geographic coordinate reference system (WGS84). Example: -10.0, -10.0, 10.0, 10.0 or -180, -90, 180, 90 for whole world in Geographic."
          in: query
          name: bbox
          required: false
          type: string
        - description: "A POLYGON geometry describing the AOI in the Well-known text format. Example: POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))"
          in: query
          name: geometry
          required: false
          type: string 
          format: WKT Geometric objects
        - description: "The sensor type used for capturing the product."
          in: query
          name: sensorType
          required: true
          type: string
          enum: [ "optical", "radar", "terrain" ]
        - description: "A date or date interval that must match the product acquisition date. Only products in this range are returned in the response. Example: [2017-01-01,2017-02-01[ to select all products acquired in January 2017. "
          in: query
          name: acquisitionDate
          required: false
          type: string 
          format: Interval of dates in ISO 8601
        - description: "A number or number range that must match the product resolution in meter. Only products in this range are returned in the response. example: 1.5] to select all products with a resolution inferior or equal to 1.5 meter."
          in: query
          name: resolution
          required: false
          type: string 
          format: Interval of resolution in meter
        - description: "A number or number range that must match the product incidence angle in degrees. Only products in this range are returned in the response. example: 30] to select all products with an incidence angle inferior or equal to 30 degrees."
          in: query
          name: incidenceAngle
          required: false
          type: string 
          format: Interval of incidence angle in degrees
        - description: "A number or number range that must match the product cloud coverage in percentage (min 0%, max 100%). Only products in this range are returned in the response. example: 10[ to select all products with a cloud coverage less than 10 percent."
          in: query
          name: cloudCover
          required: false
          type: string 
          format: Interval of cloud coverage in percent
        - description: "A number or number range that must match the product snow coverage in percentage (min 0%, max 100%). Only products in this range are returned in the response. example: [50,90] to select all products with a partial snow coverage of at least 50 percent but no more than 90 percent."
          in: query
          name: snowCover
          required: false
          type: string 
          format: Interval of cloud coverage in percent
        - description: "The constellation of satelittes used to acquire the product. Setting a constellation is identical as setting all the product types generated by the given satellite constellation. __WARNING__: Mixing constellation and productType parameters result in an unspecified filter."
          in: query
          name: constellation
          required: false
          type: string
          enum: [ "Pleiades", "SPOT", "TerraSAR-X Mission" ]
        - description: "A list of product types used as a filter. Only products of one of these types will be returned in the response."
          in: query
          name: productType
          required: false
          type: array 
          items: {
            type: string,
            collectionFormat: csv,
            enum: [ "Pléiades 0.5-m", "Pléiades 0.5-m - STEREO", "Pléiades 0.5-m – TRISTEREO", "SPOT 1.5-m", "SPOT 1.5-m - STEREO", "SPOT 1.5-m - TRISTEREO", "SPOT 2.5-m B&W", "SPOT 2.5-m Color", "SPOT 5-m B&W", "SPOT 5-m Color", "SPOT 10-m B&W", "SPOT 10-m Color", "SPOT 20-m Color", "High Resolution SpotLight (HS)", "ScanSAR (SC)", "SpotLight (SL)", "Staring SpotLight (ST)", "StripMap (SM)", "Wide ScanSAR (WS)", "WorldDEM", "WorldDEM core", "WorldDEM DTM" ]
          }

        # Specific Radar properties
        - description: "The polarization channels used by the sensor during the product acquisition. Only products acquired with one of the listed polarisation channel will be returned in the response."
          in: query
          name: polarisationChannels
          required: false
          type: array
          items: {
            type: string,
            collectionFormat: csv,
            enum: [ "HH", "VV", "HH,HV", "HH,VV", "VV,VH" ]
          }
        - description: "The satellite orbit direction during the product acquisition. Only products acquired on the specified orbit direction will be returned in the response."
          in: query
          name: orbitDirection
          required: false
          type: array
          enum: [ "ASCENDING", "DESCENDING" ]
        - description: "The antenna look direction during the product acquisition. Only products acquired with the antenna looking in the specified direction will be returned in the response."
          in: query
          name: antennaLookDirection
          required: false
          type: array
          enum: [ "LEFT", "RIGTH" ]

        # OpenQuery
        - description: Number of items per page
          in: query
          name: count
          required: false
          type: integer
          default: 10
        - description: Page number
          in: query
          name: startPage
          required: false
          type: integer
          default: 1
        - description: "A sorting request to the server conforming the OpenSearch SRU specification. Example: sortKeys=acquisitionDate,,0 cloudCover,,1 meaning a request to sort first by newest acquired image first and then by then smallest cloud coverage percentage."
          in: query
          name: sortKeys
          required: false
          type: string 
          format: OpenSearch SRU
          
          
      responses:
        '200':
          description: Request successful # - all results returned
          schema:
            $ref: '#/definitions/SearchResult'
        #'206': # TODO: Currently not implemented ?
        #  description: Request successful - partial results returned
        '401':
          description: 'Unauthorized: the authorization is missing or has expired.'
        '400':
          description: 'The request is not correct. This can happen if both bbox and geometry are present.'
      tags:
        - Search


        
